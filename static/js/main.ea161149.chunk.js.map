{"version":3,"sources":["redux/auth-reducer.js","components/Navbar/Navbar.module.css","redux/app-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","redux/profile-reducer.js","api/api.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/loading.svg"],"names":["SET_USER_DATA","SET_USER_PHOTO","initialState","userId","email","login","isAuth","smallPhoto","setAuthUserData","type","payload","setUserPhoto","getAuthUserData","dispatch","a","authAPI","me","response","data","resultCode","id","password","rememberMe","message","messages","length","stopSubmit","_error","logout","authReducer","state","action","module","exports","initialized","appReducer","Header","className","styles","header","src","alt","loginBlock","onClick","to","connect","auth","props","Navbar","nav","item","activeClassName","activeLink","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Component","fallback","Preloader","DialogsContainer","React","lazy","UsersContainer","ProfileContainer","Login","App","this","initializeApp","path","render","AppContainer","withRouter","then","SamuraiJSApp","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","preloader","profile","posts","likesCount","status","addPost","newPostText","setUserStatus","getUserProfile","profileAPI","getProfile","photos","small","getUserStatus","getStatus","updateUserStatus","updateStatus","newPost","filter","p","postId","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","warn","put","dialogs","name","sendMessage","newMessageBody","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.ea161149.chunk.js","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\nconst SET_USER_PHOTO = 'samurai-network/auth/SET-USER-PHOTO';\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  smallPhoto: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case SET_USER_PHOTO:\n      return {\n        ...state,\n        smallPhoto: action.smallPhoto\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {userId, email, login, isAuth}\n});\nexport const setUserPhoto = (smallPhoto) => ({type: SET_USER_PHOTO, smallPhoto});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n      let {id, email, login} = response.data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  }\n;\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    dispatch(stopSubmit(\"login\", {_error: message}));\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n}\n\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"friends\":\"Navbar_friends__3-QW_\"};","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\n\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n\n  promise.then(() => {dispatch(initializedSuccess())})\n}\n\n\nexport default appReducer;","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport styles from \"./Header.module.css\";\n\nconst Header = ({isAuth, login, logout}) => {\n  return (\n    <header className={styles.header}>\n      <img\n        src=\"https://www.pinclipart.com/picdir/big/91-918525_react-logos-download-green-tree-logo-tree-logo.png\"\n        alt=\"\"\n      />\n\n      <div className={styles.loginBlock}>\n        {isAuth ? <div>{login}\n            <button onClick={logout}>Logout</button>\n          </div>\n          : <NavLink to={\"/login\"}>Login</NavLink>\n        }\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nconst HeaderContainer = (props) => {\n  return <Header {...props} />;\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className={styles.nav}>\n      <ul>\n        <li className={styles.item}>\n          <NavLink to=\"/profile\" activeClassName={styles.activeLink}>\n            Profile\n          </NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink to=\"/users\" activeClassName={styles.activeLink}>\n            Users\n          </NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>\n            Messages\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer\n});\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React, { Suspense } from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n  return (props) => {\n    return <Suspense fallback={<Preloader />}>\n      <Component {...props} />\n    </Suspense>\n  }\n}","import React from \"react\";\nimport { withRouter, Route, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Login = React.lazy(() => import('./components/Login/Login'));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n          <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\n          <Route path=\"/users\" render={withSuspense(UsersContainer)} />\n          <Route path=\"/login\" render={withSuspense(Login)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nconst SamuraiJSApp = (props) => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default SamuraiJSApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n  <SamuraiJSApp />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport preloader from \"../../../assets/images/loading.svg\";\n\nlet Preloader = () => {\n  return (\n    <img src={preloader} alt=\"\" />\n  )\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {setUserPhoto} from \"./auth-reducer\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_USER_STATUS = \"SET-USER-STATUS\";\nconst DELETE_POST = \"DELETE-POST\"\n\nlet initialState = {\n  profile: null,\n  posts: [\n    {\n      id: 1,\n      message: \"Hi, how are you?\",\n      likesCount: 15\n    },\n    {\n      id: 2,\n      message: \"It's my first post\",\n      likesCount: 23\n    },\n    {\n      id: 3,\n      message: \"blabla\",\n      likesCount: 23\n    },\n    {\n      id: 4,\n      message: \"dada\",\n      likesCount: 23\n    },\n  ],\n  status: \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case ADD_POST:\n\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0\n      };\n\n      return {\n        ...state,\n        posts: [...state.posts, newPost]\n      };\n\n    case SET_USER_PROFILE:\n\n      return {\n        ...state,\n        profile: action.profile\n      }\n\n    case SET_USER_STATUS:\n\n      return {\n        ...state,\n        status: action.status\n      }\n\n    case DELETE_POST:\n      return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n\n    default:\n      return state;\n  }\n}\n\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n  let response = await profileAPI.getProfile(userId);\n\n  dispatch(setUserProfile(response.data));\n  dispatch(setUserPhoto(response.data.photos.small));\n}\n\nexport const getUserStatus = (userId) => async (dispatch) => {\n  let response = await profileAPI.getStatus(userId);\n\n  dispatch(setUserStatus(response.data));\n}\n\nexport const updateUserStatus = (status) => async (dispatch) => {\n  let response = await profileAPI.updateStatus(status);\n  \n  if (response.data.resultCode === 0) {\n    dispatch(setUserStatus(status))\n  }\n}\n\nexport default profileReducer;","import * as axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"9cdaa8ae-8bf4-4b8f-880d-088e8decc630\",\n  }\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => {\n        return response.data;\n      });\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    console.warn(\"Obsolete method. Please use profileAPI object.\")\n    profileAPI.getProfile(userId)\n  }\n};\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`);\n  },\n  getStatus(userId) {\n    return instance.get(`/profile/status/${userId}`);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, { status });\n  }\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {email, password, rememberMe});\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n};","const SEND_MESSAGE = \"SEND-MESSAGE\";\n\nlet initialState = {\n  dialogs: [\n    {\n      id: 1,\n      name: \"Dimych\"\n    },\n    {\n      id: 2,\n      name: \"Andrey\"\n    },\n    {\n      id: 3,\n      name: \"Sveta\"\n    },\n    {\n      id: 4,\n      name: \"Sasha\"\n    },\n    {\n      id: 5,\n      name: \"Victor\"\n    },\n    {\n      id: 6,\n      name: \"Valera\"\n    },\n  ],\n  messages: [\n    {\n      id: 1,\n      message: \"Hi\"\n    },\n    {\n      id: 2,\n      message: \"How is your it-kamasutra?\"\n    },\n    {\n      id: 3,\n      message: \"Yo\"\n    },\n    {\n      id: 4,\n      message: \"Yo\"\n    },\n    {\n      id: 5,\n      message: \"Yo\"\n    },\n  ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case SEND_MESSAGE:\n\n      let body = action.newMessageBody;\n      return {\n        ...state,\n        messages: [...state.messages, { id: 6, message: body }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const sendMessage = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\n\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n  return items.map(u => {\n    if (u[objPropName] === itemId) {\n      return {...u, ...newObjProps};\n    }\n    return u;\n  })\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n      };\n\n    case SET_USERS:\n      return {...state, users: action.users};\n\n    case SET_CURRENT_PAGE:\n      return {...state, currentPage: action.currentPage};\n\n    case SET_TOTAL_USERS_COUNT:\n      return {...state, totalUsersCount: action.totalCount};\n\n    case TOGGLE_IS_FETCHING:\n      return {...state, isFetching: action.isFetching};\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n  ;\n};\n\nexport const followSucces = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\n\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(page))\n\n  let data = await usersAPI.getUsers(page, pageSize);\n\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n\n  let response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => async (dispatch) => {\n  followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSucces);\n}\n\nexport const unfollow = (userId) => async (dispatch) => {\n  followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces);\n}\n\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/loading.d520bb87.svg\";"],"sourceRoot":""}