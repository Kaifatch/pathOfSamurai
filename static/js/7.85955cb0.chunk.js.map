{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","createField","component","validators","placeholder","name","text","validate","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oEAAO,IAAMC,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCF1BE,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAE7CC,EAAWH,GAAWC,EAC5B,OACE,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KACpE,6BACGC,GAEFC,GAAY,8BAAOF,KAKbM,EAAW,SAACC,GAAW,IAC7BV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADqB,YACCS,EADD,mBAEjC,OAAO,kBAACX,EAAgBW,EAAO,8CAAcV,EAAWW,MAG7CC,EAAQ,SAACF,GAAW,IAC1BV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADkB,YACIS,EADJ,mBAE9B,OAAO,kBAACX,EAAgBW,EAAO,2CAAWV,EAAWW,MAG1CE,EAAc,SAACC,EAAWC,EAAYC,EAAaC,GAArC,IAA2CP,EAA3C,uDAAmD,GAAIQ,EAAvD,uDAA8D,GAA9D,OACzB,6BACE,kBAAC,IAAD,eAAOJ,UAAWA,EAAWK,SAAUJ,EAAYC,YAAaA,EAAaC,KAAMA,GAAUP,IAD/F,IAC0GQ,K,yGCP7FE,cAAU,CAACC,KAAM,SAAjBD,EAhBG,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcnB,EAAW,EAAXA,MAChC,OACE,0BAAMoB,SAAUD,GACbT,YAAYD,IAAO,CAAClB,KAAW,QAAS,SACxCmB,YAAYD,IAAO,CAAClB,KAAW,WAAY,WAAY,CAAC8B,KAAM,aAC9DX,YAAYD,IAAO,KAAM,KAAM,aAAc,CAACY,KAAM,YAAa,cACjErB,GAAS,yBAAKG,UAAWC,IAAOkB,kBAC9BtB,GAEH,6BACE,8C,uBCUOuB,uBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGmB,CAACE,WAA1BJ,EAnBD,SAAC,GAAqB,IAApBI,EAAmB,EAAnBA,MAKd,OALiC,EAAZF,OAMZ,kBAAC,IAAD,CAAUG,GAAI,aAGhB,6BACL,qCACA,kBAAC,EAAD,CAAWR,SAVI,SAACS,GAChBF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.85955cb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n  return undefined;\n}","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n\n  const hasError = touched && error\n  return (\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n      <div>\n        {children}\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  let {input, meta, ...restProps} = props\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  let {input, meta, ...restProps} = props\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (component, validators, placeholder, name, props = {}, text = \"\") => (\n  <div>\n    <Field component={component} validate={validators} placeholder={placeholder} name={name} {...props} /> {text}\n  </div>\n)\n","import {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\nimport {required} from \"../../../utils/validators/validators\";\nimport React from \"react\";\nimport styles from \"./../../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField(Input, [required], \"Email\", \"email\")}\n      {createField(Input, [required], \"Password\", \"password\", {type: \"password\"})}\n      {createField(Input, null, null, \"rememberMe\", {type: \"checkbox\"}, \"Remeber me\")}\n      {error && <div className={styles.formSummaryError}>\n        {error}\n      </div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n};\n\nexport default reduxForm({form: 'login'})(LoginForm);","import React from \"react\";\nimport LoginForm from \"./LoginForm/LoginForm\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst Login = ({login, isAuth}) => {\n  const onSubmit = (formData) => {\n    login(formData.email, formData.password, formData.rememberMe)\n  }\n\n  if (isAuth) {\n    return <Redirect to={\"/profile\"} />\n  }\n\n  return <div>\n    <h1>Login</h1>\n    <LoginForm onSubmit={onSubmit}/>\n  </div>;\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n"],"sourceRoot":""}