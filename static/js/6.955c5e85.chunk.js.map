{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","createField","component","validators","placeholder","name","text","validate","DialogItem","id","path","dialog","activeClassName","activeDialog","to","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","sendMessage","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","Component","AuthRedirectComponent","this","React"],"mappings":"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","file":"static/js/6.955c5e85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n  return undefined;\n}","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n\n  const hasError = touched && error\n  return (\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n      <div>\n        {children}\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  let {input, meta, ...restProps} = props\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  let {input, meta, ...restProps} = props\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (component, validators, placeholder, name, props = {}, text = \"\") => (\n  <div>\n    <Field component={component} validate={validators} placeholder={placeholder} name={name} {...props} /> {text}\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"activeDialog\":\"Dialogs_activeDialog__3obRw\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from \"react\";\nimport styles from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = ({id, name}) => {\n  let path = \"/dialogs/\" + id;\n  return (\n    <li className={styles.dialog}>\n      <NavLink activeClassName={styles.activeDialog} to={path}>\n        {name}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport styles from \"./Message.module.css\";\n\nconst Message = ({message}) => {\n  return <div className={styles.message}>{message}</div>;\n};\n\nexport default Message;\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength50]}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message\"}/>\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nlet Dialogs = ({sendMessage, dialogsPage}) => {\n\n  let addNewMessage = (values) => {\n    sendMessage(values.newMessageBody)\n  };\n\n  let dialogsElements = dialogsPage.dialogs.map((d) => (\n    <DialogItem name={d.name} key={d.id} id={d.id}/>\n  ));\n\n  let messagesElements = dialogsPage.messages.map((m) => (\n    <Message message={m.message} key={m.id}/>\n  ));\n\n  return (\n    <div className={styles.dialogs}>\n      <ul className={styles.dialogsItems}>{dialogsElements}</ul>\n      <div className={styles.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageForm onSubmit={addNewMessage}/>\n      </div>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class AuthRedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import {sendMessage} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {sendMessage}),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}